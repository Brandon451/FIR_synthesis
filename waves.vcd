$date
	Tue Dec  7 12:14:35 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module project_tb2_u $end
$var wire 6 ! s [5:0] $end
$var wire 7 " dif1 [6:0] $end
$var reg 4 # a [3:0] $end
$var reg 4 $ ar [3:0] $end
$var reg 4 % br [3:0] $end
$var reg 1 & clk $end
$var reg 4 ' cr [3:0] $end
$var reg 4 ( dr [3:0] $end
$var reg 1 ) reset $end
$var reg 6 * s_b1 [5:0] $end
$scope module f1 $end
$var wire 4 + a [3:0] $end
$var wire 1 & clk $end
$var wire 1 ) reset $end
$var reg 4 , ar [3:0] $end
$var reg 5 - c1 [4:0] $end
$var reg 6 . c2 [5:0] $end
$var reg 7 / c3 [6:0] $end
$var reg 4 0 cla1_s [3:0] $end
$var reg 5 1 cla2_s [4:0] $end
$var reg 6 2 cla3_s [5:0] $end
$var reg 5 3 cr2 [4:0] $end
$var reg 6 4 dr3 [5:0] $end
$var reg 4 5 g1 [3:0] $end
$var reg 5 6 g2 [4:0] $end
$var reg 6 7 g3 [5:0] $end
$var reg 4 8 p1 [3:0] $end
$var reg 5 9 p2 [4:0] $end
$var reg 6 : p3 [5:0] $end
$var reg 6 ; s [5:0] $end
$var reg 6 < sum [5:0] $end
$var reg 5 = sum1 [4:0] $end
$var reg 5 > sum1r [4:0] $end
$var reg 6 ? sum2 [5:0] $end
$var reg 6 @ sum2r [5:0] $end
$scope begin $ivl_for_loop0 $end
$var integer 32 A i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop1 $end
$var integer 32 B i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 C i [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 D i [31:0] $end
$upscope $end
$scope begin rst $end
$upscope $end
$scope begin run $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 D
b110 C
b101 B
b100 A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
b0xxxx 7
b0xxxx 6
bx 5
b0xxxx 4
b0xxxx 3
bx 2
bx 1
bx 0
bx0 /
bx0 .
bx0 -
bx ,
bx +
bx *
1)
bx (
bx '
0&
bx %
bx $
bx #
bx "
bx !
$end
#5000
b0xxxx <
b0xxxx 2
b0xxxx :
b0 /
b0 7
b110 C
b0xxxx ?
b0xxxx 1
b0xxxx 9
b0 .
b0 6
b101 B
b0xxxx =
b0 -
b0 5
b100 A
b0 "
b0 *
b0 (
b0 '
b0 %
b0 $
b0 !
b0 ;
b0 @
b0 >
b0 ,
1&
#10000
b100 <
b100 2
b100 :
b110 C
b100 4
b100 ?
b100 1
b100 9
b101 B
b100 3
b100 =
b100 0
b100 8
b100 A
0&
b100 #
b100 +
0)
#15000
b1000 <
b1000 2
b1000 /
b100 7
b0 :
b110 C
b1000 ?
b1000 1
b1000 .
b100 6
b0 9
b101 B
b1000 =
b1000 0
b1000 -
b100 5
b0 8
b100 A
b100 $
b100 "
b100 !
b100 ;
b100 @
b100 >
b100 ,
1&
#20000
b101 <
b0 /
b0 7
b101 2
b101 :
b110 C
b1 4
b101 ?
b0 .
b0 6
b101 1
b101 9
b101 B
b1 3
b101 =
b0 -
b0 5
b101 0
b101 8
b100 A
b1 #
b1 +
b1 D
0&
#25000
b110 <
b110 2
b10 /
b1 7
b100 :
b110 C
b110 ?
b110 1
b10 .
b1 6
b100 9
b101 B
b10 =
b10 0
b10 -
b1 5
b0 8
b100 A
b100 *
b100 %
b1 $
b1 "
b101 !
b101 ;
b101 @
b101 >
b1 ,
1&
#30000
b1110 <
b1110 2
b1100 :
b110 C
b1001 4
b1110 ?
b1110 1
b1100 9
b101 B
b1001 3
b1010 =
b1010 0
b1000 8
b100 A
b1001 #
b1001 +
b10 D
0&
#35000
b10111 <
b10111 2
b10000 /
b1000 7
b111 :
b110 C
b10011 ?
b10011 1
b10000 .
b1000 6
b11 9
b101 B
b10010 =
b10 0
b10010 -
b1001 5
b0 8
b100 A
b101 *
b100 '
b1 %
b1001 $
b1001 "
b1110 !
b1110 ;
b1110 @
b1010 >
b1001 ,
1&
#40000
b10001 <
b10001 2
b11100 /
b10 7
b1101 :
b110 C
b11 4
b1101 ?
b1101 1
b100 .
b10 6
b1001 9
b101 B
b11 3
b1100 =
b1 5
b1100 0
b110 -
b1010 8
b100 A
b11 #
b11 +
b11 D
0&
#45000
b10000 <
b10000 2
b11110 /
b1 7
b1110 :
b110 C
b1111 ?
b1111 1
b0 .
b0 6
b1111 9
b101 B
b110 =
b110 0
b11 5
b0 8
b100 A
b1110 *
b100 (
b1 '
b1001 %
b11 $
b11 "
b10001 !
b10001 ;
b1101 @
b1100 >
b11 ,
1&
#50000
b11010 <
b1101 7
b11010 2
b11010 /
b0 :
b110 C
b1101 4
b11001 ?
b11000 .
b1100 6
b11001 1
b1 9
b101 B
b1101 3
b10000 =
b11110 -
b0 0
b1 5
b1110 8
b100 A
b1101 #
b1101 +
b100 D
0&
#55000
b100110 <
b100110 2
b110010 /
b1001 7
b10100 :
b110 C
b11101 ?
b11101 1
b0 .
b0 6
b11101 9
b101 B
b11010 =
b1101 5
b1010 0
b11010 -
b0 8
b100 A
b10001 *
b1 (
b1001 '
b11 %
b1101 $
b1001 "
b11010 !
b11010 ;
b11001 @
b10000 >
b1101 ,
1&
#60000
b101 D
0&
#65000
b101010 <
b101010 2
b111010 /
b1101 7
b10000 :
b110 C
b100 A
b100111 ?
b110000 .
b1000 6
b111 1
b10111 9
b101 B
b11010 *
b1001 (
b11 '
b1101 %
b1100 "
b100110 !
b100110 ;
b11101 @
b11010 >
1&
#70000
b100010 <
b100010 2
b101 7
b11000 :
b110 C
b101 4
b11111 ?
b11111 1
b0 .
b0 6
b11111 9
b101 B
b101 3
b10010 =
b10 0
b101 5
b1000 8
b100 A
b101 #
b101 +
b110 D
0&
#75000
b100100 <
b100100 2
b111110 /
b11010 :
b110 C
b10111 ?
b10111 1
b10111 9
b101 B
b1010 =
b1010 0
b1010 -
b0 8
b100 A
b100110 *
b11 (
b1101 '
b101 $
b1111100 "
b100010 !
b100010 ;
b11111 @
b10010 >
b101 ,
1&
#80000
b100001 <
b100001 2
b111100 /
b10 7
b11101 :
b110 C
b10 4
b10100 ?
b100 .
b10 6
b10100 1
b10000 9
b101 B
b10 3
b111 =
b111 0
b0 -
b0 5
b111 8
b100 A
b10 #
b10 +
b111 D
0&
#85000
b10110 <
b0 /
b0 7
b10110 2
b10110 :
b110 C
b1001 ?
b1100 .
b1001 1
b101 9
b101 B
b100 =
b100 -
b10 5
b100 0
b0 8
b100 A
b100010 *
b1101 (
b101 %
b10 $
b1111111 "
b100001 !
b100001 ;
b10100 @
b111 >
b10 ,
1&
#90000
b10101 <
b10101 2
b10101 :
b110 C
b1 4
b1000 ?
b1000 1
b1110 .
b1 6
b110 9
b101 B
b1 3
b11 =
b0 -
b0 5
b11 0
b11 8
b100 A
b1 #
b1 +
b1000 D
0&
#95000
b1001 <
b1001 2
b1001 :
b110 C
b100 ?
b100 1
b110 .
b10 9
b101 B
b10 =
b10 0
b10 -
b1 5
b0 8
b100 A
b100001 *
b101 '
b10 %
b1 $
b1110100 "
b10101 !
b10101 ;
b1000 @
b11 >
b1 ,
1&
#100000
b10101 <
b10000 /
b1000 7
b10101 2
b101 :
b110 C
b1101 4
b10000 ?
b10000 1
b11110 .
b1110 9
b101 B
b1101 3
b1110 =
b1110 0
b1100 8
b100 A
b1101 #
b1101 +
b1001 D
0&
#105000
b11101 <
b11101 2
b0 /
b0 7
b11101 :
b110 C
b11011 ?
b11011 1
b11000 .
b1100 6
b11 9
b101 B
b11010 =
b1010 0
b11010 -
b1101 5
b0 8
b100 A
b0 "
b10101 *
b101 (
b10 '
b1 %
b1101 $
b10000 @
b1110 >
b1101 ,
1&
#110000
b1010 D
0&
#115000
b101000 <
b101000 2
b111110 /
b1001 7
b10110 :
b110 C
b100 A
b100111 ?
b111 1
b110000 .
b1000 6
b10111 9
b101 B
b10 (
b1 '
b1101 %
b1000 "
b11101 !
b11101 ;
b11011 @
b11010 >
1&
#120000
0&
#125000
b110100 <
b100 A
b101 B
b11110 /
b110100 2
b101 7
b101010 :
b110 C
b11101 *
b1 (
b1101 '
b1011 "
b101000 !
b101000 ;
b100111 @
1&
#130000
0&
#135000
b101000 *
b1101 (
b1100 "
b110100 !
b110100 ;
1&
#140000
0&
#145000
b0 "
b110100 *
1&
#150000
0&
#155000
1&
#160000
